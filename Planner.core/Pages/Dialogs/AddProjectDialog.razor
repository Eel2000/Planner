@inject ISnackbar Snackbar
@inject PlannerMainService planner

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DocumentScanner" Class="mr-3 mb-n1" />
            new project
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@project" @ref="@form" ValidationDelay="0">
            <MudCardContent>
                <MudTextField @bind-Value="project.ProjectName"
                              For="@(() => project.ProjectName)"
                              Immediate="true"
                              Label="Name" />

                <MudTextField @bind-Value="project.ProjectDescription"
                              For="@(() => project.ProjectDescription)"
                              Immediate="true"
                              Label="Description" />

                <MudSelect T="string" Label="Tag" AnchorOrigin="Origin.BottomCenter" @bind-Value="project.TagId">
                    <MudSelectItem Value="@("Started")" />
                    <MudSelectItem Value="@("Completed")" />
                    <MudSelectItem Value="@("On Going")" />
                </MudSelect>
            </MudCardContent>

            <MudSwitch @bind-Checked="@project.IsArchived" Color="Color.Success" UnCheckedColor="Color.Error" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="CreateProject">Create</MudButton>
    </DialogActions>
</MudDialog>
@code {
    MudForm? form;
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    [Parameter] public string? WorkspaceId { get; set; }

    private ProjectDTO project = new();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (string.IsNullOrWhiteSpace(WorkspaceId))
        {
            Snackbar.Add("Loading Error", Severity.Error);
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async void CreateProject()
    {
        project.WorkSpaceId = WorkspaceId;
        var r = await planner.AddProjectToWorkSpaceAsync(project);
        if (r.Status == Status.Success)
        {
            //In a real world scenario this bool would probably be a service to delete the item from api/database
            Snackbar.Add("Project created", Severity.Error);
            MudDialog.Close(DialogResult.Ok(r));

        }
        else
        {
            Snackbar.Add(r.message, Severity.Error);
            MudDialog.Close(DialogResult.Cancel());
        }
    }
}