@page "/workSpace/{id}"
@using System.Collections.ObjectModel;
@layout WorkSpaceLayout
@inject LocalService local
@inject NavigationManager navigator
@inject PlannerMainService planner


<MudBreadcrumbs Items="_items">
    <ItemTemplate Context="item">
        <MudLink Href="@item.Href">@item.Text.ToUpper()</MudLink>
    </ItemTemplate>
</MudBreadcrumbs>
<div class="container-fluid px-4">
    <div class="d-flex mud-height-full mb-4 mt-auto">
        <MudButton OnClick="@CreateWorkSpace" Color="Color.Success">Create new workspace</MudButton>
    </div>
    <MudGrid>
        @if (workSpaces is null || !workSpaces.Any())
        {

        }
        else
        {
            @foreach (var workSpace in workSpaces)
            {
                <MudItem xs="6" sm="3">
                    <MudCard>
                        <MudCardHeader>
                            <CardHeaderAvatar>
                                <MudAvatar Color="Color.Secondary">@workSpace?.Name[0]</MudAvatar>
                            </CardHeaderAvatar>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">@workSpace.Name</MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton Icon="@Icons.Material.Filled.ExpandMore" Color="Color.Default" />
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudText>@workSpace?.Description</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(()=>GotToWorkSapce(workSpace?.Id))">Open workspace</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        }
    </MudGrid>
</div>

@code {
    //TODO: add the current page layout with flyout and top bar and loader befor showing the workspace
    [Parameter]
    public string? id { get; set; }
    public static string idU;

    private ObservableCollection<WorkSpace>? workSpaces;


    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        idU = id;
        Console.WriteLine(id);
    }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        workSpaces = new();
        var fromdata = await planner.GetUserWorkspacesAsync(id);
        if (fromdata.Status == Status.Success)
        {
            local.KeepLoadedWorkspaceForLaterUser(workSpaces: fromdata?.data.ToList());
            workSpaces = new ObservableCollection<WorkSpace>(fromdata?.data);
        }
    }

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: $"/workspace/{idU}"),
        new BreadcrumbItem("WorkSpaces", href: $"/workspace/{idU}", disabled: true)
    };

    void GotToWorkSapce(string workspaceId)
    {
        navigator.NavigateTo($"/working-space/{workspaceId}/user/{id}");
    }

    void CreateWorkSpace() => navigator.NavigateTo($"/workspace-new/{id}");
}
